import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Router } from '@angular/router';
import { Subject } from 'rxjs';
import { map } from 'rxjs/operators';

import { Aspirante } from './aspirante.model';

@Injectable({ providedIn: 'root' })
export class AspiranteService {
  private aspirantes: Aspirante[] = [];
  private aspirantesUpdated = new Subject<Aspirante[]>();

  private servidor: string = 'http://localhost:3000';

  constructor(private http: HttpClient, private router: Router) {}

  getAspirantes() {
    this.http.get<{mensaje: string, aspirantes: any}>(this.servidor + "/aspirantes")
      .pipe(map((aspiranteData) => {
        return aspiranteData.aspirantes.map((aspirante: any) => {
          return {
            id: aspirante._id,
            nombre: aspirante.nombre,
            apellidos: aspirante.apellidos,
            alias: aspirante.alias,
            ci: aspirante.ci,
            edad: aspirante.edad,
            sexo: aspirante.sexo,
            provincia: aspirante.provincia,
            municipio: aspirante.municipio,
            direccion: aspirante.direccion,
            correo: aspirante.correo,
            telefono: aspirante.telefono,
            color_piel: aspirante.color_piel,
            estatura: aspirante.estatura,
            peso: aspirante.peso,
            estado_civil: aspirante.estado_civil,
            hijos: aspirante.hijos,
            foto: aspirante.foto,
            licencia: aspirante.licencia,
            categoria_licencia: aspirante.categoria_licencia,
            militancia: aspirante.militancia,
            nivel_escolaridad: aspirante.nivel_escolaridad,
            titulo_graduado: aspirante.titulo_graduado,
            experiencia_laboral: aspirante.experiencia_laboral,
            otros_estudios: aspirante.otros_estudios,
            trayectoria_laboral: aspirante.trayectoria_laboral,
            situacion_laboral: aspirante.situacion_laboral,
            centro_trabajo: aspirante.centro_trabajo,
            organismo_trabajo: aspirante.organismo_trabajo,
            cargo_trabajo: aspirante.cargo_trabajo,
            categoria_trabajo: aspirante.categoria_trabajo,
            direccion_trabajo: aspirante.direccion_trabajo,
            telefono_trabajo: aspirante.telefono_trabajo,
            otros_oficios: aspirante.otros_oficios,
            estado: aspirante.estado,
            causa_eliminacion: aspirante.causa_eliminacion,
            causa_no_apto: aspirante.causa_no_apto,
            preseleccion: aspirante.preseleccion,
            fecha_inicio_proceso_investigativo: aspirante.fecha_inicio_proceso_investigativo,
            fecha_fin_proceso_investigativo: aspirante.fecha_fin_proceso_investigativo,
            resultado_proceso_investigativo: aspirante.resultado_proceso_investigativo,
            curriculum_vitae: aspirante.curriculum_vitae,
            fecha_curriculum_vitae: aspirante.fecha_curriculum_vitae,
            autobiografia: aspirante.autobiografia,
            fecha_autobiografia: aspirante.fecha_autobiografia,
            titulo: aspirante.titulo,
            fecha_titulo: aspirante.fecha_titulo,
            chequeo_medico: aspirante.chequeo_medico,
            fecha_chequeo_medico: aspirante.fecha_chequeo_medico,
            avales_cdr: aspirante.avales_cdr,
            fecha_avales_cdr: aspirante.fecha_avales_cdr,
            avales_centro_trabajo: aspirante.avales_centro_trabajo,
            fecha_avales_centro_trabajo: aspirante.fecha_avales_centro_trabajo,
            fotos: aspirante.fotos,
            fecha_fotos: aspirante.fecha_fotos,
            anexo1: aspirante.anexo1,
            fecha_anexo1: aspirante.fecha_anexo1,
            antecedentes: aspirante.antecedentes,
            fecha_antecedentes: aspirante.fecha_antecedentes,
            evaluacion_psicologica: aspirante.evaluacion_psicologica,
            comite_admision: aspirante.comite_admision,
          };
        });
      }))
      .subscribe((aspirantes) => {
        this.aspirantes = aspirantes;
        this.aspirantesUpdated.next([...this.aspirantes]);
      });
  }

  getAspirantesUpdateListener() {
    return this.aspirantesUpdated.asObservable();
  }

  updateAspirante(
    id: any,
    nombre: string,
    apellidos: string,
    alias: string,
    ci: string,
    edad: number,
    sexo: string,
    provincia: string,
    municipio: string,
    direccion: string,
    correo: string,
    telefono: string,
    raza: string,
    estatura: number,
    peso: number,
    estado_civil: string,
    hijos: string,
    licencia: boolean,
    categoria_licencia: string,
    militancia: string,
    nivel_escolaridad: string,
    titulo_graduado: string,
    experiencia_laboral: number,
    otros_estudios: string,
    trayectoria_laboral: string,
    situacion_laboral: string,
    centro_trabajo: string,
    organismo_trabajo: string,
    cargo_trabajo: string,
    categoria_trabajo: string,
    direccion_trabajo: string,
    telefono_trabajo: string,
    otros_oficios: string,
    estado: string,
    causa_eliminacion: string,
    causa_no_apto: string,
    preseleccion: string,
    fecha_inicio_proceso_investigativo: string,
    fecha_fin_proceso_investigativo: string,
    resultado_proceso_investigativo: string,
    curriculum_vitae: boolean,
    fecha_curriculum_vitae: string,
    autobiografia: boolean,
    fecha_autobiografia: string,
    titulo: boolean,
    fecha_titulo: string,
    chequeo_medico: boolean,
    fecha_chequeo_medico: string,
    avales_cdr: boolean,
    fecha_avales_cdr: string,
    avales_centro_trabajo: boolean,
    fecha_avales_centro_trabajo: string,
    fotos: boolean,
    fecha_fotos: string,
    anexo1: boolean,
    fecha_anexo1: string,
    antecedentes: boolean,
    fecha_antecedentes: string,
    evaluacion_psicologica: string,
    comite_admision: string
  ) {
    const aspirante: Aspirante = {
      id: id,
      nombre: nombre,
      apellidos: apellidos,
      alias: alias,
      ci: ci,
      edad: edad,
      sexo: sexo,
      provincia: provincia,
      municipio: municipio,
      direccion: direccion,
      correo: correo,
      telefono: telefono,
      raza: raza,
      estatura: estatura,
      peso: peso,
      estado_civil: estado_civil,
      hijos: hijos,
      licencia: licencia,
      categoria_licencia: categoria_licencia,
      militancia: militancia,
      nivel_escolaridad: nivel_escolaridad,
      titulo_graduado: titulo_graduado,
      experiencia_laboral: experiencia_laboral,
      otros_estudios: otros_estudios,
      trayectoria_laboral: trayectoria_laboral,
      situacion_laboral: situacion_laboral,
      centro_trabajo: centro_trabajo,
      organismo_trabajo: organismo_trabajo,
      cargo_trabajo: cargo_trabajo,
      categoria_trabajo: categoria_trabajo,
      direccion_trabajo: direccion_trabajo,
      telefono_trabajo: telefono_trabajo,
      otros_oficios: otros_oficios,
      estado: estado,
      causa_eliminacion: causa_eliminacion,
      causa_no_apto: causa_no_apto,
      preseleccion: preseleccion,
      fecha_inicio_proceso_investigativo: fecha_inicio_proceso_investigativo,
      fecha_fin_proceso_investigativo: fecha_fin_proceso_investigativo,
      resultado_proceso_investigativo: resultado_proceso_investigativo,
      curriculum_vitae: curriculum_vitae,
      fecha_curriculum_vitae: fecha_curriculum_vitae,
      autobiografia: autobiografia,
      fecha_autobiografia: fecha_autobiografia,
      titulo: titulo,
      fecha_titulo: fecha_titulo,
      chequeo_medico: chequeo_medico,
      fecha_chequeo_medico: fecha_chequeo_medico,
      avales_cdr: avales_cdr,
      fecha_avales_cdr: fecha_avales_cdr,
      avales_centro_trabajo: avales_centro_trabajo,
      fecha_avales_centro_trabajo: fecha_avales_centro_trabajo,
      fotos: fotos,
      fecha_fotos: fecha_fotos,
      anexo1: anexo1,
      fecha_anexo1: fecha_anexo1,
      antecedentes: antecedentes,
      fecha_antecedentes: fecha_antecedentes,
      evaluacion_psicologica: evaluacion_psicologica,
      comite_admision: comite_admision
    };
    this.http.put(this.servidor + "/aspirantes/" + id, aspirante)
      .subscribe(response => {
        const aspirantesActualizados = [...this.aspirantes];
        const aspirantesAntiguos = aspirantesActualizados.findIndex(aspirante => aspirante.id === aspirante.id);
        aspirantesActualizados[aspirantesAntiguos] = aspirante;
        this.aspirantes = aspirantesActualizados;
        this.aspirantesUpdated.next([...this.aspirantes]);
        this.router.navigate(["/"]);
      });
  }

  updateCandidato(
    id: any,
    nombre: string,
    apellidos: string,
    alias: string,
    ci: string,
    edad: number,
    sexo: string,
    provincia: string,
    municipio: string,
    direccion: string,
    correo: string,
    telefono: string,
    raza: string,
    estatura: number,
    peso: number,
    estado_civil: string,
    hijos: string,
    licencia: boolean,
    categoria_licencia: string,
    militancia: string,
    nivel_escolaridad: string,
    titulo_graduado: string,
    experiencia_laboral: number,
    otros_estudios: string,
    trayectoria_laboral: string,
    situacion_laboral: string,
    centro_trabajo: string,
    organismo_trabajo: string,
    cargo_trabajo: string,
    categoria_trabajo: string,
    direccion_trabajo: string,
    telefono_trabajo: string,
    otros_oficios: string,
    estado: string,
    causa_eliminacion: string,
    causa_no_apto: string,
    preseleccion: string,
    fecha_inicio_proceso_investigativo: string,
    fecha_fin_proceso_investigativo: string,
    resultado_proceso_investigativo: string,
    curriculum_vitae: boolean,
    fecha_curriculum_vitae: string,
    autobiografia: boolean,
    fecha_autobiografia: string,
    titulo: boolean,
    fecha_titulo: string,
    chequeo_medico: boolean,
    fecha_chequeo_medico: string,
    avales_cdr: boolean,
    fecha_avales_cdr: string,
    avales_centro_trabajo: boolean,
    fecha_avales_centro_trabajo: string,
    fotos: boolean,
    fecha_fotos: string,
    anexo1: boolean,
    fecha_anexo1: string,
    antecedentes: boolean,
    fecha_antecedentes: string,
    evaluacion_psicologica: string,
    comite_admision: string
  ) {
    const aspirante: Aspirante = {
      id: id,
      nombre: nombre,
      apellidos: apellidos,
      alias: alias,
      ci: ci,
      edad: edad,
      sexo: sexo,
      provincia: provincia,
      municipio: municipio,
      direccion: direccion,
      correo: correo,
      telefono: telefono,
      raza: raza,
      estatura: estatura,
      peso: peso,
      estado_civil: estado_civil,
      hijos: hijos,
      licencia: licencia,
      categoria_licencia: categoria_licencia,
      militancia: militancia,
      nivel_escolaridad: nivel_escolaridad,
      titulo_graduado: titulo_graduado,
      experiencia_laboral: experiencia_laboral,
      otros_estudios: otros_estudios,
      trayectoria_laboral: trayectoria_laboral,
      situacion_laboral: situacion_laboral,
      centro_trabajo: centro_trabajo,
      organismo_trabajo: organismo_trabajo,
      cargo_trabajo: cargo_trabajo,
      categoria_trabajo: categoria_trabajo,
      direccion_trabajo: direccion_trabajo,
      telefono_trabajo: telefono_trabajo,
      otros_oficios: otros_oficios,
      estado: estado,
      causa_eliminacion: causa_eliminacion,
      causa_no_apto: causa_no_apto,
      preseleccion: preseleccion,
      fecha_inicio_proceso_investigativo: fecha_inicio_proceso_investigativo,
      fecha_fin_proceso_investigativo: fecha_fin_proceso_investigativo,
      resultado_proceso_investigativo: resultado_proceso_investigativo,
      curriculum_vitae: curriculum_vitae,
      fecha_curriculum_vitae: fecha_curriculum_vitae,
      autobiografia: autobiografia,
      fecha_autobiografia: fecha_autobiografia,
      titulo: titulo,
      fecha_titulo: fecha_titulo,
      chequeo_medico: chequeo_medico,
      fecha_chequeo_medico: fecha_chequeo_medico,
      avales_cdr: avales_cdr,
      fecha_avales_cdr: fecha_avales_cdr,
      avales_centro_trabajo: avales_centro_trabajo,
      fecha_avales_centro_trabajo: fecha_avales_centro_trabajo,
      fotos: fotos,
      fecha_fotos: fecha_fotos,
      anexo1: anexo1,
      fecha_anexo1: fecha_anexo1,
      antecedentes: antecedentes,
      fecha_antecedentes: fecha_antecedentes,
      evaluacion_psicologica: evaluacion_psicologica,
      comite_admision: comite_admision
    };
    this.http.put(this.servidor + "/aspirantes/" + id, aspirante)
      .subscribe(response => {
        const aspirantesActualizados = [...this.aspirantes];
        const aspirantesAntiguos = aspirantesActualizados.findIndex(aspirante => aspirante.id === aspirante.id);
        aspirantesActualizados[aspirantesAntiguos] = aspirante;
        this.aspirantes = aspirantesActualizados;
        this.aspirantesUpdated.next([...this.aspirantes]);
        this.router.navigate(["/candidatos-en-proceso"]);
      });
  }
}
